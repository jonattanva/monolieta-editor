on: push

jobs:
  prepare:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install

  static-check:
    timeout-minutes: 30
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run lint

  test-assets:
    timeout-minutes: 30
    needs: static-check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run test:coverage
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          retention-days: 1
          path: |
            coverage

  test-e2e:
    timeout-minutes: 30
    needs: static-check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - uses: cypress-io/github-action@v5
        with:
          env: true
          install: false
          start: pnpm run dev --host
          wait-on: 'http://localhost:5173'
          browser: chrome
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress
          retention-days: 1
          path: |
            cypress/videos
            cypress/screenshots

  report-coverage:
    timeout-minutes: 30
    needs: [test-assets, test-e2e]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - uses: actions/download-artifact@v3
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
